name: CI Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    strategy:
      matrix:
        test-group: [group-1, group-2, group-3, group-4]
        python-version: [3.12]
      fail-fast: false  # Continue running other groups if one fails
    
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Show test group info
      run: |
        echo "=== Test Group Information ==="
        echo "Group: ${{ matrix.test-group }}"
        echo "Python version: ${{ matrix.python-version }}"
        echo "Runner: ${{ runner.os }}"
        echo "Available memory: $(free -h || echo 'free command not available')"
        echo "CPU cores: $(nproc || echo 'nproc not available')"
        echo "=== Test files in this group ==="
        python tests/group_tests.py get-patterns ${{ matrix.test-group }}

    - name: Run test group ${{ matrix.test-group }}
      run: |
        echo "=== Starting test group: ${{ matrix.test-group }} ==="
        echo "Current time: $(date)"
        
        # Get test patterns for this group
        patterns=$(python tests/group_tests.py get-patterns ${{ matrix.test-group }})
        
        # Run tests with patterns
        python -m pytest \
          -v \
          --tb=short \
          --timeout=300 \
          -m "not integration" \
          $patterns
        
        # Also run CI-specific smoke tests for quick validation
        echo "=== Running CI smoke tests ==="
        python -m pytest tests/test_smoke_ci.py -v
        
        echo "=== Completed test group: ${{ matrix.test-group }} ==="
        echo "End time: $(date)"

  # Optional: Add a summary job that runs after all test groups complete
  test-summary:
    needs: test
    runs-on: ubuntu-latest
    if: always()  # Run even if some test groups failed
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Test Summary
      run: |
        echo "=== Test Matrix Summary ==="
        echo "All test groups have completed."
        echo "Check individual group results above for details."
        
        # Show which groups passed/failed
        if [ "${{ needs.test.result }}" == "success" ]; then
          echo "✅ All test groups passed!"
        else
          echo "❌ Some test groups failed. Check the logs above for details."
        fi
