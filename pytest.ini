[pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
asyncio_mode = auto
timeout = 120
timeout_method = signal
norecursedirs = .git .venv venv dist build logs .mypy_cache __pycache__

# Ensure both project root (for `import src.*`) and `src` (for top-level packages like `config`) are on sys.path
pythonpath = . src

# Test markers
markers =
    unit: Unit tests
    integration: Integration tests (require real database)
    slow: Slow running tests
    live_trading: Tests that require live trading
    risk_management: Risk management related tests
    database: Tests that interact with database
    fast: Fast running tests (< 1 second)
    medium: Medium speed tests (1-10 seconds)
    computation: Tests with heavy computation
    io: Tests with file or network I/O
    mock_only: Tests that only use mocks
    data_provider: Tests for data providers
    monitoring: Tests for monitoring functionality
    smoke: Quick smoke tests
    timeout: Tests with timeout constraints
    strategy: Strategy related tests

# Output settings
addopts = 
    -q
    --strict-markers
    --tb=short
    --verbose
    --color=yes
    --durations=10
    --maxfail=5
    --randomly-seed=1

# Parallelization settings (when using pytest-xdist)
# These are recommendations - actual command line args override
# -n 4: Balanced worker count for good performance while preventing CPU overload on laptops
# --dist loadgroup: Better test distribution than loadscope
# --maxprocesses: Limit max processes to avoid overwhelming system

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning:testcontainers
    
# Test collection optimizations
# Note: collect_ignore_glob is not a valid pytest.ini option
# Use pytest.ini addopts with --ignore instead if needed

# Removed coverage configuration; moved to .coveragerc

# Removed custom [pytest:ini] test_groups; not a valid pytest option