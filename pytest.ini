[pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Add src to Python path
pythonpath = src

# Test markers
markers =
    unit: Unit tests
    integration: Integration tests (require real database)
    slow: Slow running tests
    live_trading: Tests that require live trading
    risk_management: Risk management related tests
    database: Tests that interact with database
    fast: Fast running tests (< 1 second)
    medium: Medium speed tests (1-10 seconds)
    computation: Tests with heavy computation
    io: Tests with file or network I/O
    mock_only: Tests that only use mocks
    data_provider: Tests for data providers
    monitoring: Tests for monitoring functionality
    smoke: Quick smoke tests
    timeout: Tests with timeout constraints
    strategy: Strategy related tests

# Output settings
addopts = 
    --strict-markers
    --tb=short
    --verbose
    --color=yes
    --durations=10
    --maxfail=5

# Parallelization settings (when using pytest-xdist)
# These are recommendations - actual command line args override
# -n 4: Balanced worker count for good performance while preventing CPU overload on laptops
# --dist loadgroup: Better test distribution than loadscope
# --maxprocesses: Limit max processes to avoid overwhelming system

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning:testcontainers
    
# Test collection optimizations
# Note: collect_ignore_glob is not a valid pytest.ini option
# Use pytest.ini addopts with --ignore instead if needed

# Coverage settings (when running with coverage)
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__init__.py
    */conftest.py

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

# Test execution order optimization
# Group tests by their expected duration
[pytest:ini]
# Custom test groups for better parallel execution
test_groups = 
    fast: test_indicators.py test_returns_calculations.py test_smoke.py
    medium: test_strategies.py test_risk_management.py test_performance.py
    slow: test_backtesting.py test_ml_adaptive.py test_monitoring.py
    integration: test_database.py test_integration.py test_live_trading.py test_account_sync.py test_data_providers.py