# AI Trading Bot Environment Configuration
# Copy this file to .env and customize for your environment

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Option 1: PostgreSQL (Recommended for environment parity)
# Uncomment the line below to use local PostgreSQL via Docker
# DATABASE_URL=postgresql://trading_bot:dev_password_123@localhost:5432/ai_trading_bot

# Option 2: SQLite (Simple local development)
# Leave DATABASE_URL commented out to use SQLite automatically
# SQLite database will be created at: src/data/trading_bot.db

# =============================================================================
# TRADING CONFIGURATION
# =============================================================================

# Trading mode: 'paper' for simulation, 'live' for real trading
TRADING_MODE=paper

# Initial balance for paper trading (in USD)
INITIAL_BALANCE=10000

# Risk parameters
MAX_POSITION_SIZE=0.1  # Maximum 10% of balance per position
MAX_TOTAL_EXPOSURE=0.8  # Maximum 80% total exposure

# =============================================================================
# EXCHANGE API CREDENTIALS
# =============================================================================

# Binance API credentials (required for live trading and real data)
BINANCE_API_KEY=your_binance_api_key
BINANCE_API_SECRET=your_binance_api_secret_here

# Binance testnet (for paper trading with real API)
# BINANCE_TESTNET=true

# =============================================================================
# SENTIMENT DATA PROVIDERS
# =============================================================================

# SentiCrypt API (Bitcoin sentiment data)
# SENTICRYPT_API_URL=https://api.senticrypt.com/v2/all.json

# CryptoCompare API
# CRYPTOCOMPARE_API_KEY=your_cryptocompare_api_key

# Augmento API  
# AUGMENTO_API_KEY=your_augmento_api_key

# =============================================================================
# LOGGING AND MONITORING
# =============================================================================

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Enable database logging for all trades and performance metrics
LOG_TO_DATABASE=true

# Webhook URL for alerts (optional)
# ALERT_WEBHOOK_URL=https://your-webhook-url.com/alerts

# =============================================================================
# ML MODEL CONFIGURATION
# =============================================================================

# Model training parameters
ML_EPOCHS=50
ML_BATCH_SIZE=32
ML_SEQUENCE_LENGTH=60

# Model file paths (optional, uses defaults if not specified)
# ML_PRICE_MODEL_PATH=ml/btcusdt_price.onnx
# ML_SENTIMENT_MODEL_PATH=ml/btcusdt_sentiment.onnx

# =============================================================================
# CACHING CONFIGURATION
# =============================================================================

# Enable data caching to reduce API calls
ENABLE_CACHING=true

# Cache TTL in seconds (default: 1 hour)
CACHE_TTL=3600

# Redis URL for distributed caching (optional, uses memory cache if not set)
# REDIS_URL=redis://localhost:6379

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Enable debug mode for development
DEBUG=false

# Enable hot-swapping of strategies during live trading
ENABLE_HOT_SWAPPING=true

# Strategy execution interval in seconds
STRATEGY_INTERVAL=60

# Enable paper trading dashboard
ENABLE_DASHBOARD=true
DASHBOARD_PORT=8000

# =============================================================================
# AWS CONFIGURATION (for production deployment)
# =============================================================================

# AWS region for deployment
# AWS_REGION=us-east-1

# AWS Secrets Manager secret name for production credentials
# AWS_SECRET_NAME=ai-trading-bot/production

# =============================================================================
# RAILWAY CONFIGURATION (for Railway deployment)
# =============================================================================

# Railway deployment settings (automatically set by Railway)
# RAILWAY_PROJECT_ID=your-project-id
# RAILWAY_ENVIRONMENT=production
# DATABASE_URL=postgresql://user:pass@host:port/db  # Auto-provided by Railway